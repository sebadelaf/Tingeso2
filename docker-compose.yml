# docker-compose.yml para KarRM (Backend + Frontend)
# Versión simple: 1 instancia de cada uno (Referencia: Clase7 - Scenario 1)

version: '3.8' # Especifica una versión de la sintaxis de Compose (opcional pero recomendado)

#multiples instancias

services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: postgres_tingeso
    environment:
      POSTGRES_DB: Tingeso
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    networks:
      - backend-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  # Frontend services
  frontend1:
    image: sebadelaf10/frontend:latest
    networks:
      - frontend-network

  frontend2:
    image: sebadelaf10/frontend:latest
    networks:
      - frontend-network

  frontend3:
    image: sebadelaf10/frontend:latest
    networks:
      - frontend-network

  # Backend services
  # Backend services
  backend1:
    image: sebadelaf10/backend:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/Tingeso  # Cambié 'host.docker.internal' a 'postgres'
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    networks:
      - backend-network

  backend2:
    image: sebadelaf10/backend:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/Tingeso  # Cambié 'host.docker.internal' a 'postgres'
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    networks:
      - backend-network

  backend3:
    image: sebadelaf10/backend:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/Tingeso  # Cambié 'host.docker.internal' a 'postgres'
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    networks:
      - backend-network
  
  #Carga de balance del frontend
  nginx-frontend:
    image: nginx:latest
    ports:
      - "8070:80"
    volumes:
      - ./nginx-frontend.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend1
      - frontend2
      - frontend3
    networks:
      - frontend-network
  
  #Carga de balances del backend
  # Nginx for backend load balancing
  nginx-backend:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx-backend.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - backend-network

# --- Definición de la Red Personalizada ---
networks:
  frontend-network:
  backend-network:  
# Volumes for Postgres data persistence
volumes:
  postgres_data: